---
title: "fragpipeOutputProcessing"
author: "Christopher Hughes"
format: html
editor: visual
---

## Details

This document describes processing the output from FragPipe.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
```

I want to set a base directory that we can use for our analysis.

```{r}
##########################################################################################
baseRepository = 'D:/requests/231108_1162'
```

## Data processing

Process the FragPipe data for the first sample.

```{r}
##########################################################################################
##read in the fasta index file
fastaIndex = readRDS(paste(baseRepository,'/databasePreparation/ncbiScomberJaponicusAccessionCorrected_20231219.rds',sep=''))

##read in the protein result file
pro = read_tsv(paste(baseRepository,'/fragpipeBand1/protein.tsv',sep=''),
               show_col_types = FALSE) %>%
  dplyr::select(Protein, Length, Coverage, `Protein Probability`, `Total Peptides`:`Indistinguishable Proteins`) %>%
  dplyr::rename(accession = 'Protein',
                length = 'Length',
                coverage = 'Coverage',
                proteinProbability = 'Protein Probability',
                totalPeptides = 'Total Peptides',
                uniquePeptides = 'Unique Peptides',
                razorPeptides = 'Razor Peptides',
                totalSpectralCount = 'Total Spectral Count',
                uniqueSpectralCount = 'Unique Spectral Count',
                razorSpectralCount = 'Razor Spectral Count',
                totalIntensity = 'Total Intensity',
                uniqueIntensity = 'Unique Intensity',
                razorIntensity = 'Razor Intensity',
                razorAssignedMods = 'Razor Assigned Modifications',
                razorObservedMods = 'Razor Observed Modifications',
                indistinguishableProteins = 'Indistinguishable Proteins') %>%
  dplyr::left_join(fastaIndex) %>%
  dplyr::arrange(-totalSpectralCount)

##save the file
write.table(pro, paste(baseRepository,'/fragpipeBand1/proteinProcessed.tsv',sep=''),
            quote = FALSE, sep = '\t', col.names = TRUE, row.names = FALSE)
```

Process the FragPipe data for the second sample.

```{r}
##########################################################################################
##read in the fasta index file
fastaIndex = readRDS(paste(baseRepository,'/databasePreparation/ncbiScomberJaponicusAccessionCorrected_20231219.rds',sep=''))

##read in the protein result file
pro = read_tsv(paste(baseRepository,'/fragpipeBand2/protein.tsv',sep=''),
               show_col_types = FALSE) %>%
  dplyr::select(Protein, Length, Coverage, `Protein Probability`, `Total Peptides`:`Indistinguishable Proteins`) %>%
  dplyr::rename(accession = 'Protein',
                length = 'Length',
                coverage = 'Coverage',
                proteinProbability = 'Protein Probability',
                totalPeptides = 'Total Peptides',
                uniquePeptides = 'Unique Peptides',
                razorPeptides = 'Razor Peptides',
                totalSpectralCount = 'Total Spectral Count',
                uniqueSpectralCount = 'Unique Spectral Count',
                razorSpectralCount = 'Razor Spectral Count',
                totalIntensity = 'Total Intensity',
                uniqueIntensity = 'Unique Intensity',
                razorIntensity = 'Razor Intensity',
                razorAssignedMods = 'Razor Assigned Modifications',
                razorObservedMods = 'Razor Observed Modifications',
                indistinguishableProteins = 'Indistinguishable Proteins') %>%
  dplyr::left_join(fastaIndex) %>%
  dplyr::arrange(-totalSpectralCount)

##save the file
write.table(pro, paste(baseRepository,'/fragpipeBand2/proteinProcessed.tsv',sep=''),
            quote = FALSE, sep = '\t', col.names = TRUE, row.names = FALSE)
```


## Session info

```{r}
##########################################################################################
sessionInfo()
```

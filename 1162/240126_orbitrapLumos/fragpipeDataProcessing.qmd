---
title: "fragpipeOutputProcessing"
author: "Christopher Hughes"
format: html
editor: visual
---

## Details

This document describes processing the output from FragPipe.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
library('Biostrings')
```

I want to set a base directory that we can use for our analysis.

```{r}
##########################################################################################
baseRepository = 'D:/requests/1162/240126_orbitrapLumos'
```

## Data processing

Process the FragPipe data for the first sample.

```{r}
##########################################################################################
##read in the fasta index file
#fastaDb = readAAStringSet(paste(baseRepository,'/2024-01-31-decoys-contam-UP000087266.fas',sep=''))
#fastaIndex = tibble('metadata' = names(fastaDb)) %>%
#  dplyr::filter(!grepl('contam_', metadata) & !grepl('rev_', metadata)) %>%
#  dplyr::mutate(accession = sub('[a-z]+\\|(.*)\\|.*','\\1',metadata),
#                uniprot = sub('[a-z]+\\|.*\\|(.*_SALSA) .*','\\1',metadata),
#                gene = sub('.*GN\\=(.*) PE.*','\\1',metadata)) %>%
#  dplyr::mutate(gene = ifelse(grepl('SALSA',gene), sub('(.*)\\_SALSA','\\1',uniprot), gene))


##read in the protein result file
pro = read_tsv(paste(baseRepository,'/fragpipeRedoSample3/protein.tsv',sep=''),
               show_col_types = FALSE) %>% 
  dplyr::select(Protein, "Protein ID", Gene, Length, Coverage, `Protein Probability`, `Total Peptides`:`Indistinguishable Proteins`) %>%
  dplyr::rename(accession = 'Protein ID',
                gene = 'Gene',
                length = 'Length',
                coverage = 'Coverage',
                proteinProbability = 'Protein Probability',
                totalPeptides = 'Total Peptides',
                uniquePeptides = 'Unique Peptides',
                razorPeptides = 'Razor Peptides',
                totalSpectralCount = 'Total Spectral Count',
                uniqueSpectralCount = 'Unique Spectral Count',
                razorSpectralCount = 'Razor Spectral Count',
                totalIntensity = 'Total Intensity',
                uniqueIntensity = 'Unique Intensity',
                razorIntensity = 'Razor Intensity',
                razorAssignedMods = 'Razor Assigned Modifications',
                razorObservedMods = 'Razor Observed Modifications',
                indistinguishableProteins = 'Indistinguishable Proteins') %>%
  #dplyr::left_join(fastaIndex) %>%
  dplyr::arrange(-totalSpectralCount)

##save the file
write.table(pro, paste(baseRepository,'/fragpipeRedoSample3/proteinProcessed.tsv',sep=''),
            quote = FALSE, sep = '\t', col.names = TRUE, row.names = FALSE)
```

Process the FragPipe data for the second sample.

```{r}
##########################################################################################
##read in the protein result file
pro = read_tsv(paste(baseRepository,'/fragpipeRedoSample4/protein.tsv',sep=''),
               show_col_types = FALSE) %>% 
  dplyr::select(Protein, "Protein ID", Gene, Length, Coverage, `Protein Probability`, `Total Peptides`:`Indistinguishable Proteins`) %>%
  dplyr::rename(accession = 'Protein ID',
                gene = 'Gene',
                length = 'Length',
                coverage = 'Coverage',
                proteinProbability = 'Protein Probability',
                totalPeptides = 'Total Peptides',
                uniquePeptides = 'Unique Peptides',
                razorPeptides = 'Razor Peptides',
                totalSpectralCount = 'Total Spectral Count',
                uniqueSpectralCount = 'Unique Spectral Count',
                razorSpectralCount = 'Razor Spectral Count',
                totalIntensity = 'Total Intensity',
                uniqueIntensity = 'Unique Intensity',
                razorIntensity = 'Razor Intensity',
                razorAssignedMods = 'Razor Assigned Modifications',
                razorObservedMods = 'Razor Observed Modifications',
                indistinguishableProteins = 'Indistinguishable Proteins') %>%
  #dplyr::left_join(fastaIndex) %>%
  dplyr::arrange(-totalSpectralCount)

##save the file
write.table(pro, paste(baseRepository,'/fragpipeRedoSample4/proteinProcessed.tsv',sep=''),
            quote = FALSE, sep = '\t', col.names = TRUE, row.names = FALSE)
```

## Session info

```{r}
##########################################################################################
sessionInfo()
```

---
title: "fragpipeOutputProcessing"
author: "Christopher Hughes"
format: html
editor: visual
---

## Details

This document describes processing the output from FragPipe.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
```

I want to set a base directory that we can use for our analysis.

```{r}
##########################################################################################
baseRepository = 'D:/requests/1163/240326_orbitrapLumos/fragpipeFirstPass'
```

## Data processing

Process the FragPipe data for all of the samples.

```{r}
##########################################################################################
##read in the fasta index
annotationDb = readRDS(paste(baseRepository, '/2024-03-27-reviewed-UP000000589-spikein.fasta_index_trypticPeps.rds',sep=''))

##read in the protein result file
foldersToProcess = c('IgGFL','IgGML','IPIgG','IPML','MWFL','MWML','PDLuc','PDPi14')
for (i in 1:length(foldersToProcess)){
  proTemp = read_tsv(paste(baseRepository,'/sample',foldersToProcess[i],'/protein.tsv',sep=''), show_col_types = FALSE) %>%
    dplyr::select(`Protein ID`,`Entry Name`, Coverage, `Protein Probability`, `Total Peptides`:`Indistinguishable Proteins`) %>%
    dplyr::rename(accession = 'Protein ID',
                  entry = 'Entry Name',
                  coverage = 'Coverage',
                  proteinProbability = 'Protein Probability',
                  totalPeptides = 'Total Peptides',
                  uniquePeptides = 'Unique Peptides',
                  razorPeptides = 'Razor Peptides',
                  totalSpectralCount = 'Total Spectral Count',
                  uniqueSpectralCount = 'Unique Spectral Count',
                  razorSpectralCount = 'Razor Spectral Count',
                  totalIntensity = 'Total Intensity',
                  uniqueIntensity = 'Unique Intensity',
                  razorIntensity = 'Razor Intensity',
                  razorAssignedMods = 'Razor Assigned Modifications',
                  razorObservedMods = 'Razor Observed Modifications',
                  indistinguishableProteins = 'Indistinguishable Proteins') %>%
    dplyr::select(-razorObservedMods) %>%
    dplyr::arrange(-totalSpectralCount, -totalIntensity, -uniqueIntensity, -razorIntensity) %>%
    dplyr::filter(uniquePeptides >= 1) %>%
    dplyr::left_join(annotationDb)
  
  ##save the file
  write.table(proTemp, paste(baseRepository,'/sample',foldersToProcess[i],'/proteinProcessed.tsv',sep=''),
            quote = FALSE, sep = '\t', col.names = TRUE, row.names = FALSE)
}
```

Combine the data for comparisons.

## Session info

```{r}
##########################################################################################
sessionInfo()
```
